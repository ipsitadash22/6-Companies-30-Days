class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        long[][] dp = new long[n][n];
        for(int i=0 ; i<n ; i++){
            for(int j=0 ; j<n ; j++){
                if(i==j){
                    dp[i][j] = 0;
                }else{
                    dp[i][j] = Long.MAX_VALUE/2;
                }
            }
        }

        for(int[] edge : edges){
            int u = edge[0];
            int v = edge[1];
            int wt = edge[2];

            dp[u][v] = wt;
            dp[v][u] = wt;
        }

        for(int k=0 ; k<n ; k++){
            for(int i=0 ; i<n ; i++){
                for(int j=0 ; j<n ; j++){
                    long newWt = dp[i][k] + dp[k][j];
                    if(newWt <= dp[i][j]){
                        dp[i][j] = newWt;
                    }
                }
            }
        }

        int minReach = Integer.MAX_VALUE;
        int result = -1;

        for(int i=0 ; i<n ; i++){
            int rechable = 0;
            for(int j=0 ; j<n ; j++){
                if(dp[i][j] <= distanceThreshold){
                    rechable++;
                }
            }

            if(rechable <= minReach){
                minReach = rechable;
                result = i;
            }
        }

        return result;
    }
}
