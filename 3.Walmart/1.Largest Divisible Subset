class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        List<Integer> list = new ArrayList<>();
        int[] dp = new int[n];
        int[] prev = new int[n];

        Arrays.fill(prev , -1);
        Arrays.fill(dp , 1);

        int maxIndex = 0;
        int maxLength = 1;

        for(int i=1 ; i<n ; i++){
            for(int j=0 ; j<i ; j++){
                if(nums[i]%nums[j] == 0 && dp[i] < dp[j]+1){
                    dp[i] = dp[j]+1;
                    prev[i] = j;
                }
            }
            if(maxLength < dp[i]){
                maxLength = dp[i];
                maxIndex = i;
            }
        }

        for(int i=maxIndex ; i>=0 ; i=prev[i]){
            list.add(nums[i]);
        }

        return list;
    }
}
