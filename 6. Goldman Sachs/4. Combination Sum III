class Solution {
   public void recursion(int k ,int target , int start , List<Integer> subset , List<List<Integer>> list){
        if(subset.size()==k && target==0){
            list.add(new ArrayList<>(subset));          
            return;    
          }
        for(int i=start ; i<=9 ; i++){
            subset.add(i);
            recursion(k , target - i , i+1 , subset , list);
            subset.remove(subset.size()-1);
        }
    }
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<Integer> subset = new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        recursion(k,n,1,subset,list);
        return list;
    }
}
