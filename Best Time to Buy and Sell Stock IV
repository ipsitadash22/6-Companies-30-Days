class Solution {
    public int maxProfit(int k, int[] prices) {
        int n = prices.length;
        if(k>n/2){
            int max = 0;
            for(int i=1 ; i<n ; i++){
                if(prices[i] > prices[i-1]){
                    max += prices[i]-prices[i-1];
                }
            }
            return max;
        }


        int[][] dp = new int[k+1][n];
        for(int i=1 ; i<k+1 ; i++){
            int maxDiff = -prices[0];
            for(int j=1 ; j<n ; j++){
                dp[i][j] = Math.max(dp[i][j-1] , prices[j] + maxDiff);
                maxDiff = Math.max(maxDiff , dp[i-1][j] - prices[j]);
            }
        }

        return dp[k][n-1];
    }
}
